#!/usr/bin/env bash

set -euo pipefail
[ "${TRACE:-false}" = 'true' ] && set -x

SCRIPT_DIR="$(cd "$(dirname "$0")" && pwd)"
PROJECT_DIR="$(dirname "$SCRIPT_DIR")"

REPO_NAME="${REPO_NAME:-firefish}"
COMPONENT="${COMPONENT:-main}"
ORIGIN="${ORIGIN:-Firefish}"
LABEL="${LABEL:-Firefish}"
PUBLIC_ROOT_DIR="${PUBLIC_ROOT_DIR:-$HOME/.aptly/public}"

function usage() {
    echo "Usage: $0 --dest-root PATH --list-file PATH --passphrase-file PATH"
}

while [ "$#" -gt 0 ]; do
    case "$1" in
        -o | --dest-root)
            DEST_ROOT_DIR="$2"
            shift 2
            ;;
        -l | --list-file)
            LIST_FILE="$2"
            shift 2
            ;;
        -p | --passphrase-file)
            PASSPHRASE_FILE="$2"
            shift 2
            ;;
        --help | -h | -?)
            usage
            exit 0
            ;;
        *)
            echo "Unknown option: $1"
            usage
            exit 1
            break
            ;;
    esac
done

TEMP_DIR="$(mktemp -d)"
trap 'rm -rf "$TEMP_DIR"' EXIT

DISTRIBUTION="$(cat "$LIST_FILE" | jq -r '.distribution')"

aptly repo create "$REPO_NAME"

cat "$LIST_FILE" | jq -c '.files|.[]' | while IFS= read -r file_entry; do
    deb_url="$(echo "$file_entry" | jq -r '.url')"
    deb_name="$(echo "$file_entry" | jq -r '.name')"
    deb_file="$TEMP_DIR/$deb_name"

    wget -O "$deb_file" "$deb_url"
    aptly repo add "$REPO_NAME" "$deb_file"
done

aptly publish repo \
    -batch \
    "-origin=$ORIGIN" \
    "-label=$LABEL" \
    "-distribution=$DISTRIBUTION" \
    "-component=$COMPONENT" \
    "-passphrase-file=$PASSPHRASE_FILE" \
    "$REPO_NAME"
mkdir -p "$DEST_ROOT_DIR/dists/"
cp -r "$PUBLIC_ROOT_DIR/dists/"* "$DEST_ROOT_DIR/dists/"

aptly publish drop "$DISTRIBUTION"
aptly repo drop "$REPO_NAME"
